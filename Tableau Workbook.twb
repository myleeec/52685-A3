<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.22.0707.1757                               -->
<workbook original-version='18.1' source-build='2021.3.14 (20213.22.0707.1757)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='data (processed_batch)' inline='true' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='processed_batch' name='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/kyle/Desktop/untitled folder/processed_batch.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='string' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Text 10]' />
            <value name='[Text 11]' />
            <value name='[Text 12]' />
            <value name='[Text 13]' />
            <value name='[Text 14]' />
            <value name='[Text 15]' />
            <value name='[Text 16]' />
            <value name='[Text 17]' />
            <value name='[Text 18]' />
            <value name='[Text 19]' />
            <value name='[Text 1]' />
            <value name='[Text 20]' />
            <value name='[Text 21]' />
            <value name='[Text 22]' />
            <value name='[Text 23]' />
            <value name='[Text 2]' />
            <value name='[Text 3]' />
            <value name='[Text 4]' />
            <value name='[Text 5]' />
            <value name='[Text 6]' />
            <value name='[Text 7]' />
            <value name='[Text 8]' />
            <value name='[Text 9]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[data].[text 10]' />
              <field name='[data].[text 11]' />
              <field name='[data].[text 12]' />
              <field name='[data].[text 13]' />
              <field name='[data].[text 14]' />
              <field name='[data].[text 15]' />
              <field name='[data].[text 16]' />
              <field name='[data].[text 17]' />
              <field name='[data].[text 18]' />
              <field name='[data].[text 19]' />
              <field name='[data].[text 1]' />
              <field name='[data].[text 20]' />
              <field name='[data].[text 21]' />
              <field name='[data].[text 22]' />
              <field name='[data].[text 23]' />
              <field name='[data].[text 2]' />
              <field name='[data].[text 3]' />
              <field name='[data].[text 4]' />
              <field name='[data].[text 5]' />
              <field name='[data].[text 6]' />
              <field name='[data].[text 7]' />
              <field name='[data].[text 8]' />
              <field name='[data].[text 9]' />
            </group>
          </groups>
          <relation connection='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk' name='data' table='[data$]' type='table'>
            <columns gridOrigin='A1:AD1000:no:A1:AD1000:0' header='yes' lost='0' outcome='2' processed='3017'>
              <column datatype='string' name='Classification' ordinal='0' />
              <column datatype='real' name='Sentiment rating' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='integer' name='credit' ordinal='3' />
              <column datatype='string' name='name' ordinal='4' />
              <column datatype='date' date-parse-format='dd-MMM-yy' name='date' ordinal='5' />
              <column datatype='integer' name='star' ordinal='6' />
              <column datatype='string' name='text 1' ordinal='7' />
              <column datatype='string' name='text 2' ordinal='8' />
              <column datatype='string' name='text 3' ordinal='9' />
              <column datatype='string' name='text 4' ordinal='10' />
              <column datatype='string' name='text 5' ordinal='11' />
              <column datatype='string' name='text 6' ordinal='12' />
              <column datatype='string' name='text 7' ordinal='13' />
              <column datatype='string' name='text 8' ordinal='14' />
              <column datatype='string' name='text 9' ordinal='15' />
              <column datatype='string' name='text 10' ordinal='16' />
              <column datatype='string' name='text 11' ordinal='17' />
              <column datatype='string' name='text 12' ordinal='18' />
              <column datatype='string' name='text 13' ordinal='19' />
              <column datatype='string' name='text 14' ordinal='20' />
              <column datatype='string' name='text 15' ordinal='21' />
              <column datatype='string' name='text 16' ordinal='22' />
              <column datatype='string' name='text 17' ordinal='23' />
              <column datatype='string' name='text 18' ordinal='24' />
              <column datatype='string' name='text 19' ordinal='25' />
              <column datatype='string' name='text 20' ordinal='26' />
              <column datatype='string' name='text 21' ordinal='27' />
              <column datatype='string' name='text 22' ordinal='28' />
              <column datatype='string' name='text 23' ordinal='29' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='string' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Text 10]' />
            <value name='[Text 11]' />
            <value name='[Text 12]' />
            <value name='[Text 13]' />
            <value name='[Text 14]' />
            <value name='[Text 15]' />
            <value name='[Text 16]' />
            <value name='[Text 17]' />
            <value name='[Text 18]' />
            <value name='[Text 19]' />
            <value name='[Text 1]' />
            <value name='[Text 20]' />
            <value name='[Text 21]' />
            <value name='[Text 22]' />
            <value name='[Text 23]' />
            <value name='[Text 2]' />
            <value name='[Text 3]' />
            <value name='[Text 4]' />
            <value name='[Text 5]' />
            <value name='[Text 6]' />
            <value name='[Text 7]' />
            <value name='[Text 8]' />
            <value name='[Text 9]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[data].[text 10]' />
              <field name='[data].[text 11]' />
              <field name='[data].[text 12]' />
              <field name='[data].[text 13]' />
              <field name='[data].[text 14]' />
              <field name='[data].[text 15]' />
              <field name='[data].[text 16]' />
              <field name='[data].[text 17]' />
              <field name='[data].[text 18]' />
              <field name='[data].[text 19]' />
              <field name='[data].[text 1]' />
              <field name='[data].[text 20]' />
              <field name='[data].[text 21]' />
              <field name='[data].[text 22]' />
              <field name='[data].[text 23]' />
              <field name='[data].[text 2]' />
              <field name='[data].[text 3]' />
              <field name='[data].[text 4]' />
              <field name='[data].[text 5]' />
              <field name='[data].[text 6]' />
              <field name='[data].[text 7]' />
              <field name='[data].[text 8]' />
              <field name='[data].[text 9]' />
            </group>
          </groups>
          <relation connection='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk' name='data' table='[data$]' type='table'>
            <columns gridOrigin='A1:AD1000:no:A1:AD1000:0' header='yes' lost='0' outcome='2' processed='3017'>
              <column datatype='string' name='Classification' ordinal='0' />
              <column datatype='real' name='Sentiment rating' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='integer' name='credit' ordinal='3' />
              <column datatype='string' name='name' ordinal='4' />
              <column datatype='date' date-parse-format='dd-MMM-yy' name='date' ordinal='5' />
              <column datatype='integer' name='star' ordinal='6' />
              <column datatype='string' name='text 1' ordinal='7' />
              <column datatype='string' name='text 2' ordinal='8' />
              <column datatype='string' name='text 3' ordinal='9' />
              <column datatype='string' name='text 4' ordinal='10' />
              <column datatype='string' name='text 5' ordinal='11' />
              <column datatype='string' name='text 6' ordinal='12' />
              <column datatype='string' name='text 7' ordinal='13' />
              <column datatype='string' name='text 8' ordinal='14' />
              <column datatype='string' name='text 9' ordinal='15' />
              <column datatype='string' name='text 10' ordinal='16' />
              <column datatype='string' name='text 11' ordinal='17' />
              <column datatype='string' name='text 12' ordinal='18' />
              <column datatype='string' name='text 13' ordinal='19' />
              <column datatype='string' name='text 14' ordinal='20' />
              <column datatype='string' name='text 15' ordinal='21' />
              <column datatype='string' name='text 16' ordinal='22' />
              <column datatype='string' name='text 17' ordinal='23' />
              <column datatype='string' name='text 18' ordinal='24' />
              <column datatype='string' name='text 19' ordinal='25' />
              <column datatype='string' name='text 20' ordinal='26' />
              <column datatype='string' name='text 21' ordinal='27' />
              <column datatype='string' name='text 22' ordinal='28' />
              <column datatype='string' name='text 23' ordinal='29' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AD1000:no:A1:AD1000:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Classification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Classification]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Classification</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sentiment rating]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Sentiment rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>credit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[credit]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>credit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>star</remote-name>
            <remote-type>20</remote-type>
            <local-name>[star]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>star</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Pivot Field' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Words' datatype='string' name='[Pivot Field Values]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='data' datatype='table' name='[__tableau_internal_object_id__].[data_124EE2141BA54C90BD438DFDBD8E24B8]' role='measure' type='quantitative' />
      <column caption='Credit' datatype='integer' name='[credit]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;AU&quot;' value='&quot;Australia&quot;' />
        </semantic-values>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Star' datatype='integer' name='[star]' role='dimension' type='ordinal' />
      <column-instance column='[Pivot Field Values]' derivation='None' name='[none:Pivot Field Values:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (WEEK(Date))' hidden='true' name='[Action (WEEK(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Pivot Field Values:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;4‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Afterpay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Available&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Being&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benefits&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forever&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gifts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Great&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stores&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TARNISH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;able&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;allowing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;also&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;anything‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;budget‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;card&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;committing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;crap&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;declined&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;dress&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;error&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;expire‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;favorite‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;get‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;have‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;in&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;it&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;keep&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;little&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;makes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;needy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;offer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ordering‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;paying&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;payment&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;plenty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;provide&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;reason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;salary‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;shooing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;something‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;thing‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;transaction&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;user‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;we&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;with&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;years&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;üòäI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;!!&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afterpay!!&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allows&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Convience&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Excellent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Helping&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Loving&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Made&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quality&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Results&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Single&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Time&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timely&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;adjust&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;all‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;an‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;appüëåüèª‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;because‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bonus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;came&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;days&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;dollar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;eBay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;flexibility&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frustrating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;going&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;harassed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;here&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;idea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;into&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;items&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;life&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;method&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;navigate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;not‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;opinion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;part&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;person&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;process&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;service&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;supposed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;them&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;us‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wanted&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;whenever&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;worries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;üëç&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;&amp;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALLOWING&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apple&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Help&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ilove&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JstMakeupandDance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Options&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Purchases&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Why&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;affordable‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;any&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;as&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;been‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;breeze&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cannot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;come&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cost&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dealing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;done&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;enjoy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;expensive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;flows&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;future&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;goods&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;has‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;holidays&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;issue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;made&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mistake&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;needed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;oeand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pay‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;place&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;randomly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rewards‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;several&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sluggish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;still&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;system&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;they&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;to‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;used&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;very&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wasn‚Äôt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;would‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;üëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüéäüéäüéäüëçüèºüëçüèºüëç‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;APP!!!!&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Accessibility&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Afterpay!!!!&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Awesome!Great&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greatness!!!!!!I&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Missed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;So&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Specksavers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thankful&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Variety&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;absolutely&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;am‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;better&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;business&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cash‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;complications&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;crunch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;desperate‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ease&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ever‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;extras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;few&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;freaking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;gift‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;help&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;increase&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;installments&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;it!‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;knowing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;long&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mother&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;on&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;our&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;payoff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;prefer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;purchase&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;recommended&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;saver&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;shopping&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;stuff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;this&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;trying&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;well‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;without&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;you‚Äôre&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;APay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afterpay!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Convenient&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fortnightly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Give&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Great!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OG‚Äôs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Satisfied&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TRUE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tbh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;about&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;alternative&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;away&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;build‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;card‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;company&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;create&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;definitely&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;due&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;eva&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;exspecially&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;favourite&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;gets&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;haven‚Äôt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;in-store&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;it!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;kids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;makes‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;more&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nothing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;orders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;payment‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;plus!!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;provided!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;recently&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;shop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;soooo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;straigh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;things&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;using&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;website&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;with‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;üòé&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AFFORTABLE!!&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Convenience&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mmmmm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rating&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Right&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;They&apos;re&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Useful&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Was&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wow!&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;a&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;allows&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;any‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;as‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;behalf‚Äôs!&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;breeze‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;comes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;could&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;debit‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dont&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;enjoy‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;experience&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;follow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;getting&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;goods‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hassle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;home&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;im&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;issue‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;jus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;limit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;main&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;needed‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;of&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;or&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;paycheck‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;plan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;profound&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;shame&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;so&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;stop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;system‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tool&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;way&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;will&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;üíØ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;:)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BNPL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAMILY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Has&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;I‚Äôm‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PERFECT!!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUPPORT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Track&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;With&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Works&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;across&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;alerts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;amount&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;approve&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;be‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;by&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;choices&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;convenient&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;day&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;do!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;easy‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;everywhere&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fingertips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;from‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;go&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;great!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;handy‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;helps&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;instructions&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;item&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;let&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;love‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;me!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;myself&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;online&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;paid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;problem‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;put&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;reseting‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;selection&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;simplicity&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;spot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;the‚Ä¶convenience&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;time&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;up‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;want‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;when&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;üéÅ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;!!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALLDAY!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Because&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Excellent!!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fantastic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lovvve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Most&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nothing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trust&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;aferpay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;afterpay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;are&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;become‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;both‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;can&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;close&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convient!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;deaf&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;don&apos;t&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;efficient&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;flexibility!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;full&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;going‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;here‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ideal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;invented&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;its&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;life‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;necessity‚Äôs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;opportunity&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;phone‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;process‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;retailers‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;service‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;site&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;stars‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sure&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;there&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;times&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;use&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wants&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;where&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;worries‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;üëç‚ù§Ô∏èüëç‚ù§Ô∏èüëçüåπ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1000&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Afterpayü•∞&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Definitely&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Everything&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Friends&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;It‚Äôs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;I‚Äôll&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LOVING&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NOT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;accessibility&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;amazon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;app!&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;application&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;buy‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;check&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;convenence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dates‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dislike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;easy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fair&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;financially‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;gives&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;helpful!&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;institutions&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;marvellous&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;my&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;one‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;over&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;overall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;per‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;prior&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;purchasing‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;reliable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;see&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;showing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;splendid&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;the&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;thought&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;until&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;view&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;what‚Äôs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;words&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ytuuuuuuuuuu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;After&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Always&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brilliant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comfortable&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gems&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IMAGE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Just&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Not&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paying&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Usefull&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Y‚Äôall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;almost&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;anyone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;at&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;a‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;being&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;capabilities&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;couldn&apos;t&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;decide!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;down&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;enjoying&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;experience!!!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;favorite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;for&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gotten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hats&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;home‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;issues&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;just&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;link&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;moms&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;needing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;of‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;order&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;platform&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;program&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rocks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ship&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;so‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;store&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;take&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;they‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;toUse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;way!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;works&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;üíØüíØ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afterpay!!!!!&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Awsome&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Big&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Customer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Happy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;I&apos;m&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pretty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thanks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;accept&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;amazing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;app‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;but&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cause&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;confidently&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;didn&apos;t&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;easier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;extremely&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;figure&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;free‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;friends&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;gifts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;groceries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;help‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;increased&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;it&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;l&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;manageable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;much&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;new‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;on‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;out&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pays&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;purchase‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;refunds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;say&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;shopping‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;spend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;stores&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;stuff‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;this‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;tub&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;versatile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;without‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;your&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;100\%&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AMAZING!!&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Afterpay‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIG‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Different&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Every&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;I&apos;ve&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thank&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Very&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;accepted&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;app/online&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;back&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;but‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;change&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;consumers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;date&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;deal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;easiest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;finances&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;friend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;give&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;guys&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;helped&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;increasing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;it&apos;s‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;later&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;lot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;manage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;managed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;much‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;news&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;once&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;outdated&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;people&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;prices&apos;m&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;purchases&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;refundto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;satisfied&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;score&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;shops&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;spending&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;such&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;that&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;those&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;two&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;were&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wonderful&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;your‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;-&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amazon‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Birthday&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ease&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fair!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;InStore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;I‚Äôm&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Relief!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Simple&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Through&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;account&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ahold&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;appreciate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;be&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;buying&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;checkout&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;convenience&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;do&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;easy!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;everything‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;find&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;from&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;giving&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;handy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;helping&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;it‚Äôs‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;layout&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;me&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;my‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;no‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;owner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;perfect&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;problem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;push&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;really&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;see‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;split&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;super&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;the‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;up&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;want&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;whatever&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;üåª&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Been&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christmas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EXCELLENT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Easy/fast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;I‚Äôve&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;When&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;adding&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;all&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;an&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;apps&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;because&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;bomb&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;call&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;convenient!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;day!!!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;doesn‚Äôt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;exactly‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;family‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;first&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;flexible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;go!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;happy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;helps‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;interest&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;item‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lets&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;loved&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;me‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;not&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;n‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;one&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;only&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;parent!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;perks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;problems&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;qpp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;responsible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sense&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;since&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;spread&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;suppose&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;the‚Ä¶to&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;time‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;upgrade&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;want‚Ä¶when&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;when‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;world&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;üëå‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AfterPay!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Awesome&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Best&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Each&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Getting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Great!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Makes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Never&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;On&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Payment&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Straight&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;about‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;always&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;app&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;best!!!!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;building&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cards&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;company!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;credit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;delayed‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ever&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;extend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;feel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;forward&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;having&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;how&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;in-store!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;it!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;kinks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;making&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;most&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ok&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;payments&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;possible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pulse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;recommend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;save&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;shop‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;special&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;than&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;things‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;trust&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;using‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;week&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;with‚Ä¶budgeting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;you&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;üôè&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4!&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Absolutely&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;After-pay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Availability&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DECISION&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dreams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Favorite!!&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honestly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Improves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;List&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Live&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Really&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ability&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;alot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;anything&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;being‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;budget&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;capability&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;courtesy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;different&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;entire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;experiences&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;for‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;get&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;grateful&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;have&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;issues‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;just‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;make‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;money&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;needs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;off&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;options&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;order‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;paying‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pleased&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;program!&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;run&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;shoes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;some&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;store‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;target‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;thing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;track&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;user&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ways&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;üíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØ‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Highly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;afford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;after&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;allow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;and&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;are‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;can&apos;t‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;clothing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;convinience&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;don‚Äôt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;emergencies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;except&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fantastic!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;further‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hard!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;is&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ittt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lifeline&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;loyalty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;need&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;now&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;option&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pay!!!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;product&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;quite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;returned&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;services&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sites&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;started&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;survive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;these&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;times‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;u&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;use!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;was&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;while&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;worst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;üëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëç‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;800&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Afterpay‚Äôs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amazing!!!&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Changes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Easy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;First&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Installments&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;I‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;One&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Over&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reliability&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;U&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Youre&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;access&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;apple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;back‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bigger‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;buy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;continue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;dates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;disappointed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;easily&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;every‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fact&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;financial&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;friendly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;give‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;had&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;helpful&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;it‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;later‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lot‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;many&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;much‚ù§Ô∏è&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;never&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;people‚Ä¶freedom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;prices‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;purchasing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;secure&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;short&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;spending‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sucks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;thanks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;that‚Äôs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;those‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;very‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;what&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;word&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Absolute&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Afterpay!!!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;App!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Awesome!!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bunnings‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Come&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Completely&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Extremely&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Locked&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ok‚Ä¶sometimes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;am&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bestie‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cash&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;credit‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;delivery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;early‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ever!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;extra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fees&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;four&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;gift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;great‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;heaps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;how‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;in‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;it!!!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;know&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;making‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;most‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;never‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;other‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;payments‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;posted&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;purchace&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;quick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;recommend!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;saved&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;shoping&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;specially&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;straightforward&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;thank&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;think&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;trustworthy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;valued‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;well&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;within&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;you‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;üôèüèªüíúüå∏üåø&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emergency&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Goodies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Journeys&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luv&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pay!The&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Purchase&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;affordable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;allowed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;and‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;around&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;been&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;break&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;can‚Äôt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cool&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;customer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;deal‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;don‚Äôt‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;everything&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;except‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;far&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;flow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fuss&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;has&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hold&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;if&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;is‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;lifesaver!&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;missed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;need‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;now‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;option!&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pinch‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;product‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rewards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;set&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sliced&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;step&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;these‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;to&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;use‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;was‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;who&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;would&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;‚ù§Ô∏è&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;üëçüèº&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data' id='data_124EE2141BA54C90BD438DFDBD8E24B8'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='string' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Text 10]' />
                  <value name='[Text 11]' />
                  <value name='[Text 12]' />
                  <value name='[Text 13]' />
                  <value name='[Text 14]' />
                  <value name='[Text 15]' />
                  <value name='[Text 16]' />
                  <value name='[Text 17]' />
                  <value name='[Text 18]' />
                  <value name='[Text 19]' />
                  <value name='[Text 1]' />
                  <value name='[Text 20]' />
                  <value name='[Text 21]' />
                  <value name='[Text 22]' />
                  <value name='[Text 23]' />
                  <value name='[Text 2]' />
                  <value name='[Text 3]' />
                  <value name='[Text 4]' />
                  <value name='[Text 5]' />
                  <value name='[Text 6]' />
                  <value name='[Text 7]' />
                  <value name='[Text 8]' />
                  <value name='[Text 9]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[data].[text 10]' />
                    <field name='[data].[text 11]' />
                    <field name='[data].[text 12]' />
                    <field name='[data].[text 13]' />
                    <field name='[data].[text 14]' />
                    <field name='[data].[text 15]' />
                    <field name='[data].[text 16]' />
                    <field name='[data].[text 17]' />
                    <field name='[data].[text 18]' />
                    <field name='[data].[text 19]' />
                    <field name='[data].[text 1]' />
                    <field name='[data].[text 20]' />
                    <field name='[data].[text 21]' />
                    <field name='[data].[text 22]' />
                    <field name='[data].[text 23]' />
                    <field name='[data].[text 2]' />
                    <field name='[data].[text 3]' />
                    <field name='[data].[text 4]' />
                    <field name='[data].[text 5]' />
                    <field name='[data].[text 6]' />
                    <field name='[data].[text 7]' />
                    <field name='[data].[text 8]' />
                    <field name='[data].[text 9]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk' name='data' table='[data$]' type='table'>
                  <columns gridOrigin='A1:AD1000:no:A1:AD1000:0' header='yes' lost='0' outcome='2' processed='3017'>
                    <column datatype='string' name='Classification' ordinal='0' />
                    <column datatype='real' name='Sentiment rating' ordinal='1' />
                    <column datatype='string' name='location' ordinal='2' />
                    <column datatype='integer' name='credit' ordinal='3' />
                    <column datatype='string' name='name' ordinal='4' />
                    <column datatype='date' date-parse-format='dd-MMM-yy' name='date' ordinal='5' />
                    <column datatype='integer' name='star' ordinal='6' />
                    <column datatype='string' name='text 1' ordinal='7' />
                    <column datatype='string' name='text 2' ordinal='8' />
                    <column datatype='string' name='text 3' ordinal='9' />
                    <column datatype='string' name='text 4' ordinal='10' />
                    <column datatype='string' name='text 5' ordinal='11' />
                    <column datatype='string' name='text 6' ordinal='12' />
                    <column datatype='string' name='text 7' ordinal='13' />
                    <column datatype='string' name='text 8' ordinal='14' />
                    <column datatype='string' name='text 9' ordinal='15' />
                    <column datatype='string' name='text 10' ordinal='16' />
                    <column datatype='string' name='text 11' ordinal='17' />
                    <column datatype='string' name='text 12' ordinal='18' />
                    <column datatype='string' name='text 13' ordinal='19' />
                    <column datatype='string' name='text 14' ordinal='20' />
                    <column datatype='string' name='text 15' ordinal='21' />
                    <column datatype='string' name='text 16' ordinal='22' />
                    <column datatype='string' name='text 17' ordinal='23' />
                    <column datatype='string' name='text 18' ordinal='24' />
                    <column datatype='string' name='text 19' ordinal='25' />
                    <column datatype='string' name='text 20' ordinal='26' />
                    <column datatype='string' name='text 21' ordinal='27' />
                    <column datatype='string' name='text 22' ordinal='28' />
                    <column datatype='string' name='text 23' ordinal='29' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_9E60F125AE8D4665A7A35F337287C9BD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sentiment vs time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sentiment Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (processed_batch)' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dls6yh0eplwyy1epyiin1aky0rf'>
            <column datatype='real' name='[Sentiment rating]' role='dimension' type='ordinal' />
            <column-instance column='[Sentiment rating]' derivation='Avg' name='[avg:Sentiment rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[star]' derivation='Avg' name='[avg:star:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;AU&quot;' value='&quot;Australia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Star' datatype='integer' name='[star]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (WEEK(Date))]'>
            <groupfilter function='level-members' level='[twk:date:ok]' user:ui-action-filter='[Action1_9E60F125AE8D4665A7A35F337287C9BD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (WEEK(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]' max='5.0' min='1.0' palette='tableau-blue-light' type='interpolated' />
            <encoding attr='color' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' max='1.0' min='-1.0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]' />
              <lod column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]' />
              <geometry column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' />
              <lod column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]' />
              <geometry column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Latitude (generated)]</rows>
        <cols>([federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)] + [federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{8331E26A-7401-48D0-8BDF-B7F88A471CF3}' />
    </worksheet>
    <worksheet name='Sentiment vs time'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (processed_batch)' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' />
          </datasources>
          <datasource-dependencies datasource='federated.0dls6yh0eplwyy1epyiin1aky0rf'>
            <column datatype='real' name='[Sentiment rating]' role='dimension' type='ordinal' />
            <column-instance column='[Sentiment rating]' derivation='Avg' name='[avg:Sentiment rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[star]' derivation='Avg' name='[avg:star:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Star' datatype='integer' name='[star]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[twk:date:ok]' />
              <groupfilter function='member' level='[twk:date:ok]' member='#2022-04-03 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk] + [federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk])</rows>
        <cols>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{A8837FFB-4863-4C08-9798-7AEE2FE3872E}' />
    </worksheet>
    <worksheet name='Word Cloud'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (processed_batch)' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' />
          </datasources>
          <datasource-dependencies datasource='federated.0dls6yh0eplwyy1epyiin1aky0rf'>
            <column caption='Words' datatype='string' name='[Pivot Field Values]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Count' name='[cnt:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Pivot Field Values]' derivation='None' name='[none:Pivot Field Values:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (WEEK(Date))]'>
            <groupfilter function='level-members' level='[twk:date:ok]' user:ui-action-filter='[Action1_9E60F125AE8D4665A7A35F337287C9BD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pivot Field Values:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;!!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;&amp;&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;-&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;10&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1000&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;11&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;2&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;2‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;4&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;4!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;4‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;5&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;8&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;800&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Afterpay‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Afterpay‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Afterpayü•∞&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Amazon‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;BIG‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Bunnings‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;David‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I&apos;m&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I&apos;ve&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;It‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôll&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôm&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôm‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôve&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;OG‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Ok‚Ä¶sometimes&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;They&apos;re&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Youre&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Y‚Äôall&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;a&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;about‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;affordable‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;all‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;am‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;an&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;and&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;and‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;anything‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;any‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;an‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;app‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;appüëåüèª‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;are&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;are‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;as‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;a‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;back‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;because‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;become‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;been‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;behalf‚Äôs!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;being‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;bestie‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;be‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;bigger‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;both‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;breeze‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;budget‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;build‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;but‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;buy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;can&apos;t‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;can‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;card‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;cash‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;credit‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;dates‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;deal‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;debit‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;delayed‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;desperate‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;doesn‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;don‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;don‚Äôt‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;early‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;easy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;enjoy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;everything‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;every‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;ever‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;exactly‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;except‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;expire‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;family‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;favorite‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;financially‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;for‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;free‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;from‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;further‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;get‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;gift‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;give‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;going‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;goods‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;great‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;handy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;has‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;haven‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;have‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;helps‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;help‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;here‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;home‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;how‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;if&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;im&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;in&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;into&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;in‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;is&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;issues‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;issue‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;is‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it&apos;s&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it&apos;s‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;item‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;its&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;ittt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it‚Äôs‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;just‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;later‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;life‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;lot‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;love‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;makes‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;make‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;making‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;me‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;most‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;much‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;my‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;necessity‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;needed‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;need‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;never‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;new‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;not‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;now‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;no‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;n‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;of‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;one‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;on‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;ordering‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;order‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;other‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;paycheck‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;paying‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;payments‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;payment‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;pay‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;people‚Ä¶freedom&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;per‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;phone‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;pinch‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;prices‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;problem‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;process‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;product‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;purchase‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;purchasing‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;reseting‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;retailers‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;rewards‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;salary‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;see‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;service‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;shopping‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;shop‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;something‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;so‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;spending‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;stars‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;store‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;stuff‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;system‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;target‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;that‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;them&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;there&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;these&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;these‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;they&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;they‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the‚Ä¶convenience&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the‚Ä¶to&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;things‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;thing‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;this‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;those‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;times‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;time‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;to&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;to‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;up‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;user‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;use‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;using‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;us‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;valued‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;very‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;want‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;want‚Ä¶when&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;wasn‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;was‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;well‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;what‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;when‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;without‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;with‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;with‚Ä¶budgeting&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;worries‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;would‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;you&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;your&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;your‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;you‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;you‚Äôre&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;‚ù§Ô∏è&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üåª&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üéÅ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëå‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëç&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëç‚ù§Ô∏èüëç‚ù§Ô∏èüëçüåπ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëçüèº&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüéäüéäüéäüëçüèºüëçüèºüëç‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëç‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üíØ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üíØüíØ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØ‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üòäI&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üòé&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üôè&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üôèüèªüíúüå∏üåø&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]</column>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (WEEK(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]' />
              <size column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Pivot Field Values:qk]' />
              <text column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9010CA8E-808F-4107-A771-0B7A36D66461}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sentiment vs time' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Sentiment Map' w='49200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Word Cloud' w='49200' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sentiment vs time' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Sentiment Map' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Word Cloud' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{376A5729-8740-4DD1-97B6-A8F6EAFA1A86}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Word Cloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0CB056D-19FF-4ED0-8A6F-BEF5FBAD6433}' />
    </window>
    <window class='worksheet' name='Sentiment Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='46' type='filters' />
            <card size='294' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9923F30-5A56-4B7B-B6B7-0FE4604CC0C0}' />
    </window>
    <window class='worksheet' name='Sentiment vs time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Sentiment rating:ok]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:date:nk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:star:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FA895C8-C801-4E13-AD61-122687E340A8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sentiment Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sentiment vs time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Word Cloud' />
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{8E66F978-E1CE-4F5B-A8D4-CB1971354E30}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sentiment Map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sentiment vs time' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Word Cloud' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
