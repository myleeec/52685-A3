<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.22.0707.1757                               -->
<workbook original-version='18.1' source-build='2021.3.14 (20213.22.0707.1757)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AllowCalculationsForDensifiedMarks.true...AllowCalculationsForDensifiedMarks />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.InequalityRelationships.true...InequalityRelationships />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='data (processed_batch)' inline='true' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='processed_batch' name='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/kyle/Desktop/untitled folder/Web Scrape Data (ML Processed).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Version history' name='excel-direct.1fu9cj41q2obk912a4slz1cckuv1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/kyle/Desktop/untitled folder/Version history.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Dates' name='excel-direct.1hivek41toeucn10iwc4e1j0dw0k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/kyle/Desktop/untitled folder/Dates.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1fu9cj41q2obk912a4slz1cckuv1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B24:no:A1:B24:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Version' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation name='Pivot' type='pivot'>
            <columns>
              <column datatype='string' name='Pivot Field Names' />
              <column datatype='string' name='Pivot Field Values' />
            </columns>
            <tag name='Pivot Field Names'>
              <value name='[Text 10]' />
              <value name='[Text 11]' />
              <value name='[Text 12]' />
              <value name='[Text 13]' />
              <value name='[Text 14]' />
              <value name='[Text 15]' />
              <value name='[Text 16]' />
              <value name='[Text 17]' />
              <value name='[Text 18]' />
              <value name='[Text 19]' />
              <value name='[Text 1]' />
              <value name='[Text 20]' />
              <value name='[Text 21]' />
              <value name='[Text 22]' />
              <value name='[Text 23]' />
              <value name='[Text 2]' />
              <value name='[Text 3]' />
              <value name='[Text 4]' />
              <value name='[Text 5]' />
              <value name='[Text 6]' />
              <value name='[Text 7]' />
              <value name='[Text 8]' />
              <value name='[Text 9]' />
            </tag>
            <groups>
              <group name='Pivot Field Values'>
                <field name='[data].[text 10]' />
                <field name='[data].[text 11]' />
                <field name='[data].[text 12]' />
                <field name='[data].[text 13]' />
                <field name='[data].[text 14]' />
                <field name='[data].[text 15]' />
                <field name='[data].[text 16]' />
                <field name='[data].[text 17]' />
                <field name='[data].[text 18]' />
                <field name='[data].[text 19]' />
                <field name='[data].[text 1]' />
                <field name='[data].[text 20]' />
                <field name='[data].[text 21]' />
                <field name='[data].[text 22]' />
                <field name='[data].[text 23]' />
                <field name='[data].[text 2]' />
                <field name='[data].[text 3]' />
                <field name='[data].[text 4]' />
                <field name='[data].[text 5]' />
                <field name='[data].[text 6]' />
                <field name='[data].[text 7]' />
                <field name='[data].[text 8]' />
                <field name='[data].[text 9]' />
              </group>
            </groups>
            <relation connection='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk' name='data' table='[data$]' type='table'>
              <columns gridOrigin='A1:AD1000:no:A1:AD1000:0' header='yes' lost='0' outcome='2' processed='3017'>
                <column datatype='string' name='Classification' ordinal='0' />
                <column datatype='real' name='Sentiment rating' ordinal='1' />
                <column datatype='string' name='location' ordinal='2' />
                <column datatype='integer' name='credit' ordinal='3' />
                <column datatype='string' name='name' ordinal='4' />
                <column datatype='date' date-parse-format='dd-MMM-yy' name='date' ordinal='5' />
                <column datatype='integer' name='star' ordinal='6' />
                <column datatype='string' name='text 1' ordinal='7' />
                <column datatype='string' name='text 2' ordinal='8' />
                <column datatype='string' name='text 3' ordinal='9' />
                <column datatype='string' name='text 4' ordinal='10' />
                <column datatype='string' name='text 5' ordinal='11' />
                <column datatype='string' name='text 6' ordinal='12' />
                <column datatype='string' name='text 7' ordinal='13' />
                <column datatype='string' name='text 8' ordinal='14' />
                <column datatype='string' name='text 9' ordinal='15' />
                <column datatype='string' name='text 10' ordinal='16' />
                <column datatype='string' name='text 11' ordinal='17' />
                <column datatype='string' name='text 12' ordinal='18' />
                <column datatype='string' name='text 13' ordinal='19' />
                <column datatype='string' name='text 14' ordinal='20' />
                <column datatype='string' name='text 15' ordinal='21' />
                <column datatype='string' name='text 16' ordinal='22' />
                <column datatype='string' name='text 17' ordinal='23' />
                <column datatype='string' name='text 18' ordinal='24' />
                <column datatype='string' name='text 19' ordinal='25' />
                <column datatype='string' name='text 20' ordinal='26' />
                <column datatype='string' name='text 21' ordinal='27' />
                <column datatype='string' name='text 22' ordinal='28' />
                <column datatype='string' name='text 23' ordinal='29' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1fu9cj41q2obk912a4slz1cckuv1' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:B24:no:A1:B24:0' header='yes' outcome='2'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='Version' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>4</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AD1000:no:A1:AD1000:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B24:no:A1:B24:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Classification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Classification]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Classification</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sentiment rating]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Sentiment rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>credit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[credit]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>credit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>star</remote-name>
            <remote-type>20</remote-type>
            <local-name>[star]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>star</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_124EE2141BA54C90BD438DFDBD8E24B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80B5288891E6463CA9D98797CD7CB6FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Version</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Version]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Version</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80B5288891E6463CA9D98797CD7CB6FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Pivot Field' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Words' datatype='string' name='[Pivot Field Values]' role='dimension' type='nominal' />
      <column datatype='string' name='[Version]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_80B5288891E6463CA9D98797CD7CB6FF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data' datatype='table' name='[__tableau_internal_object_id__].[data_124EE2141BA54C90BD438DFDBD8E24B8]' role='measure' type='quantitative' />
      <column caption='Credit' datatype='integer' name='[credit]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;AU&quot;' value='&quot;Australia&quot;' />
        </semantic-values>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Star' datatype='integer' name='[star]' role='dimension' type='ordinal' />
      <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Pivot Field Values]' derivation='None' name='[none:Pivot Field Values:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Version,WEEK(Date))' hidden='true' name='[Action (Version,WEEK(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Version]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEK(Date))' hidden='true' name='[Action (WEEK(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date1),QUARTER(Date1),MONTH(Date1),DAY(Date1))' hidden='true' name='[Action (YEAR(Date1),QUARTER(Date1),MONTH(Date1),DAY(Date1))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
          <groupfilter function='level-members' level='[qr:Date:ok]' />
          <groupfilter function='level-members' level='[mn:Date:ok]' />
          <groupfilter function='level-members' level='[dy:Date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='23' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Pivot Field Values:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;4‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Afterpay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Available&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Being&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benefits&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forever&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gifts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Great&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stores&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TARNISH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;able&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;allowing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;also&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;anything‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;budget‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;card&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;committing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;crap&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;declined&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;dress&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;error&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;expire‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;favorite‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;get‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;have‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;in&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;it&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;keep&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;little&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;makes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;needy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;offer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ordering‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;paying&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;payment&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;plenty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;provide&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;reason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;salary‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;shooing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;something‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;thing‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;transaction&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;user‚Ä¶&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;we&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;with&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;years&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;üòäI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;!!&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afterpay!!&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allows&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Convience&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Excellent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GREAT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Helping&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Loving&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Made&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quality&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Results&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Single&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Time&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timely&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;adjust&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;all‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;an‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;appüëåüèª‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;because‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bonus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;came&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;days&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;dollar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;eBay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;flexibility&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frustrating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;going&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;harassed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;here&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;idea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;into&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;items&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;life&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;method&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;navigate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;not‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;opinion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;part&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;person&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;process&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;service&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;supposed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;them&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;us‚Ä¶&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wanted&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;whenever&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;worries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;üëç&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;&amp;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALLOWING&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amazing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apple&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Help&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ilove&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JstMakeupandDance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Options&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Purchases&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Why&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;affordable‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;any&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;as&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;been‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;breeze&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cannot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;come&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cost&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dealing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;done&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;enjoy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;expensive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;flows&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;future&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;goods&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;has‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;holidays&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;issue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;made&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mistake&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;needed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;oeand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pay‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;place&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;randomly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rewards‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;several&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sluggish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;still&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;system&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;thankful&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;they&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;to‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;used&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;very&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wasn‚Äôt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;would‚Ä¶&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;üëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüéäüéäüéäüëçüèºüëçüèºüëç‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;APP!!!!&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Accessibility&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Afterpay!!!!&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Awesome!Great&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greatness!!!!!!I&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Missed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;So&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Specksavers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thankful&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Variety&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;absolutely&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;am‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;better&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;business&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cash‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;complications&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;crunch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;desperate‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ease&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ever‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;extras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;few&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;freaking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;gift‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;help&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;increase&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;installments&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;it!‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;knowing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;long&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mother&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;on&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;our&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;payoff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;prefer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;purchase&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;recommended&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;saver&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;shopping&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;stuff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;this&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;trying&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;well‚Ä¶&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;without&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;you‚Äôre&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;APay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afterpay!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Convenient&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fortnightly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Give&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Great!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OG‚Äôs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Satisfied&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TRUE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tbh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;about&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;alternative&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;away&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;build‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;card‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;company&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;create&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;definitely&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;due&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;eva&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;exspecially&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;favourite&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;gets&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;haven‚Äôt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;in-store&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;it!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;kids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;makes‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;more&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nothing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;orders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;payment‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;plus!!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;provided!&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;recently&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;shop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;soooo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;straigh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;things&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;using&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;website&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;with‚Ä¶&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;üòé&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AFFORTABLE!!&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Convenience&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mmmmm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rating&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Right&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;They&apos;re&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Useful&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Was&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wow!&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;a&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;allows&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;any‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;as‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;behalf‚Äôs!&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;breeze‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;comes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;could&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;debit‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dont&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;enjoy‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;experience&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;follow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;getting&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;goods‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hassle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;home&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;im&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;issue‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;jus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;limit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;main&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;needed‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;of&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;or&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;paycheck‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;plan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;profound&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;shame&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;so&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;stop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;system‚Ä¶&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tool&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;way&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;will&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;üíØ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;:)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BNPL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAMILY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Has&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;I‚Äôm‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PERFECT!!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUPPORT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Track&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;With&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Works&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;across&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;alerts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;amount&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;approve&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;be‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;by&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;choices&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;convenient&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;day&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;do!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;easy‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;everywhere&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fingertips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;from‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;go&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;great!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;handy‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;helps&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;instructions&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;item&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;let&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;love‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;me!&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;myself&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;online&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;paid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;problem‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;put&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;reseting‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;selection&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;simplicity&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;spot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;the‚Ä¶convenience&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;time&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;up‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;want‚Ä¶&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;when&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;üéÅ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;!!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALLDAY!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Because&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Excellent!!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fantastic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lovvve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Most&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nothing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trust&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;aferpay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;afterpay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;are&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;awesome&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;become‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;both‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;can&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;close&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convient!!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;deaf&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;don&apos;t&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;efficient&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;flexibility!&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;full&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;going‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;here‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ideal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;invented&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;its&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;life‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;necessity‚Äôs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;opportunity&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;phone‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;process‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;retailers‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;service‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;site&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;stars‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sure&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;there&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;times&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;use&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wants&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;where&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;worries‚Ä¶&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;üëç‚ù§Ô∏èüëç‚ù§Ô∏èüëçüåπ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1000&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Afterpayü•∞&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Definitely&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Everything&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Friends&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;It‚Äôs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;I‚Äôll&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LOVING&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NOT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;accessibility&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;amazon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;app!&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;application&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;buy‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;check&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;convenence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dates‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dislike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;easy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fair&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;financially‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;gives&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;helpful!&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;institutions&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;marvellous&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;my&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;one‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;over&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;overall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;per‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;prior&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;purchasing‚Ä¶&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;reliable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;see&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;showing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;splendid&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;the&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;thought&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;until&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;view&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;what‚Äôs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;words&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ytuuuuuuuuuu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;After&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Always&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brilliant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comfortable&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gems&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IMAGE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Just&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Not&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paying&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Usefull&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Y‚Äôall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;almost&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;anyone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;at&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;a‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;being&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;capabilities&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;couldn&apos;t&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;decide!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;down&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;enjoying&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;experience!!!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;favorite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;for&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gotten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hats&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;home‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;issues&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;just&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;link&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;moms&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;needing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;of‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;order&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;platform&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;program&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rocks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ship&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;so‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;store&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;take&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;they‚Ä¶&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;toUse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;way!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;works&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;üíØüíØ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afterpay!!!!!&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Awsome&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Big&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Customer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Happy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;I&apos;m&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pretty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thanks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;accept&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;amazing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;app‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;but&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cause&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;confidently&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;didn&apos;t&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;easier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;extremely&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fantastic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;figure&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;free‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;friends&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;gifts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;groceries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;help‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;increased&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;it&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;l&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;manageable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;much&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;new‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;on‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;out&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pays&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;purchase‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;refunds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;say&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;shopping‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;spend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;stores&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;stuff‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;this‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;tub&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;versatile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;without‚Ä¶&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;your&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;100\%&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AMAZING!!&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Afterpay‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIG‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Different&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Every&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;I&apos;ve&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thank&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Very&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;accepted&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;app/online&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;back&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;but‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;change&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;consumers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;date&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;deal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;easiest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;finances&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;friend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;give&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;guys&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;helped&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;increasing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;it&apos;s‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;later&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;lot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;manage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;managed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;much‚Ä¶&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;news&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;once&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;outdated&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;people&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;prices&apos;m&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;purchases&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;refundto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;satisfied&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;score&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;shops&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;spending&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;such&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;that&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;those&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;two&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;were&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wonderful&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;your‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;-&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amazon‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Birthday&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ease&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fair!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;InStore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;I‚Äôm&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Relief!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Simple&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Through&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;account&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ahold&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;appreciate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;be&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;buying&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;checkout&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;convenience&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;do&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;easy!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;everything‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;find&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;from&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;giving&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;handy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;helping&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;it‚Äôs‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;layout&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;me&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;my‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;no‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;owner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;perfect&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;problem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;push&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;really&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;see‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;split&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;super&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;the‚Ä¶&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;up&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;want&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;whatever&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;üåª&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Been&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christmas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EXCELLENT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Easy/fast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;I‚Äôve&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;When&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;adding&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;all&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;an&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;apps&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;because&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;bomb&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;call&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;convenient!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;day!!!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;doesn‚Äôt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;exactly‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;family‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;first&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;flexible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;go!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;happy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;helps‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;interest&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;item‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lets&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;loved&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;me‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;not&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;n‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;one&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;only&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;parent!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;perks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;problems&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;qpp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;responsible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sense&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;since&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;spread&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;suppose&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;the‚Ä¶to&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;time‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;upgrade&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;want‚Ä¶when&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;when‚Ä¶&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;world&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;üëå‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AfterPay!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Awesome&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Best&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Could&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Each&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Getting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Great!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Makes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Never&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;On&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Payment&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Straight&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;about‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;always&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;app&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;best!!!!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;building&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cards&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;company!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;credit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;delayed‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ever&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;extend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;feel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;forward&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;having&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;how&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;in-store!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;it!!&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;kinks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;making&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;most&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ok&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;payments&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;possible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pulse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;recommend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;save&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;shop‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;special&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;than&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;things‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;trust&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;using‚Ä¶&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;week&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;with‚Ä¶budgeting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;you&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;üôè&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4!&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Absolutely&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;After-pay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Availability&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Be&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DECISION&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dreams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Favorite!!&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honestly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Improves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;List&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Live&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Really&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ability&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;alot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;anything&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;being‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;budget&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;capability&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;courtesy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;different&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;entire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;experiences&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;for‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;get&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;grateful&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;have&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;issues‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;just‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;make‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;money&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;needs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;off&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;options&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;order‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;paying‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pleased&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;program!&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;run&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;shoes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;some&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;store‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;target‚Ä¶&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;thing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;track&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;user&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ways&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;üíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØ‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Highly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;afford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;after&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;allow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;and&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;are‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;can&apos;t‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;clothing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;convinience&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;don‚Äôt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;emergencies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;except&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fantastic!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;further‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hard!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;is&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ittt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lifeline&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;loyalty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;need&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;now&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;option&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pay!!!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;product&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;quite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;returned&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;services&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sites&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;started&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;survive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;these&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;times‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;u&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;use!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;was&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;while&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;worst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;‚Ä¶&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;üëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëç‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;800&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Afterpay‚Äôs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amazing!!!&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Changes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Easy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;First&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Installments&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;I‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;One&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Over&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reliability&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;U&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Youre&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;access&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;apple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;back‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bigger‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;buy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;continue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;dates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;disappointed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;easily&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;every‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fact&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;financial&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;friendly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;give‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;had&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;helpful&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;it‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;later‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lot‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;many&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;much‚ù§Ô∏è&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;never&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;people‚Ä¶freedom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;prices‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;purchasing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;secure&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;short&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;spending‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sucks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;thanks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;that‚Äôs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;those‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;very‚Ä¶&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;what&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;word&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Absolute&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Afterpay!!!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;App!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Awesome!!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bunnings‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Come&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Completely&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Extremely&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Locked&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ok‚Ä¶sometimes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;am&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bestie‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cash&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;credit‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;delivery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;early‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ever!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;extra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fees&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;four&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;gift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;great‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;heaps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;how‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;in‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;it!!!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;know&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;making‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;most‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;never‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;other‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;payments‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;posted&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;purchace&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;quick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;recommend!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;saved&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;shoping&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;specially&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;straightforward&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;thank&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;think&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;trustworthy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;valued‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;well&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;within&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;you‚Ä¶&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;üôèüèªüíúüå∏üåø&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emergency&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Goodies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Journeys&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luv&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pay!The&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Purchase&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;affordable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;allowed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;and‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;around&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;been&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;break&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;can‚Äôt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cool&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;customer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;deal‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;don‚Äôt‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;everything&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;except‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;far&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;flow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fuss&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;has&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hold&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;if&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;is‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;lifesaver!&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;missed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;need‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;now‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;option!&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pinch‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;product‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rewards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;set&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sliced&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;step&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;these‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;to&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;use‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;was‚Ä¶&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;who&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;would&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;‚ù§Ô∏è&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;üëçüèº&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_80B5288891E6463CA9D98797CD7CB6FF'>
            <properties context=''>
              <relation connection='excel-direct.1fu9cj41q2obk912a4slz1cckuv1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B24:no:A1:B24:0' header='yes' outcome='2'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Version' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='data' id='data_124EE2141BA54C90BD438DFDBD8E24B8'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='string' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Text 10]' />
                  <value name='[Text 11]' />
                  <value name='[Text 12]' />
                  <value name='[Text 13]' />
                  <value name='[Text 14]' />
                  <value name='[Text 15]' />
                  <value name='[Text 16]' />
                  <value name='[Text 17]' />
                  <value name='[Text 18]' />
                  <value name='[Text 19]' />
                  <value name='[Text 1]' />
                  <value name='[Text 20]' />
                  <value name='[Text 21]' />
                  <value name='[Text 22]' />
                  <value name='[Text 23]' />
                  <value name='[Text 2]' />
                  <value name='[Text 3]' />
                  <value name='[Text 4]' />
                  <value name='[Text 5]' />
                  <value name='[Text 6]' />
                  <value name='[Text 7]' />
                  <value name='[Text 8]' />
                  <value name='[Text 9]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[data].[text 10]' />
                    <field name='[data].[text 11]' />
                    <field name='[data].[text 12]' />
                    <field name='[data].[text 13]' />
                    <field name='[data].[text 14]' />
                    <field name='[data].[text 15]' />
                    <field name='[data].[text 16]' />
                    <field name='[data].[text 17]' />
                    <field name='[data].[text 18]' />
                    <field name='[data].[text 19]' />
                    <field name='[data].[text 1]' />
                    <field name='[data].[text 20]' />
                    <field name='[data].[text 21]' />
                    <field name='[data].[text 22]' />
                    <field name='[data].[text 23]' />
                    <field name='[data].[text 2]' />
                    <field name='[data].[text 3]' />
                    <field name='[data].[text 4]' />
                    <field name='[data].[text 5]' />
                    <field name='[data].[text 6]' />
                    <field name='[data].[text 7]' />
                    <field name='[data].[text 8]' />
                    <field name='[data].[text 9]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1ius0pa1i1s5xi1d4obgu03491sk' name='data' table='[data$]' type='table'>
                  <columns gridOrigin='A1:AD1000:no:A1:AD1000:0' header='yes' lost='0' outcome='2' processed='3017'>
                    <column datatype='string' name='Classification' ordinal='0' />
                    <column datatype='real' name='Sentiment rating' ordinal='1' />
                    <column datatype='string' name='location' ordinal='2' />
                    <column datatype='integer' name='credit' ordinal='3' />
                    <column datatype='string' name='name' ordinal='4' />
                    <column datatype='date' date-parse-format='dd-MMM-yy' name='date' ordinal='5' />
                    <column datatype='integer' name='star' ordinal='6' />
                    <column datatype='string' name='text 1' ordinal='7' />
                    <column datatype='string' name='text 2' ordinal='8' />
                    <column datatype='string' name='text 3' ordinal='9' />
                    <column datatype='string' name='text 4' ordinal='10' />
                    <column datatype='string' name='text 5' ordinal='11' />
                    <column datatype='string' name='text 6' ordinal='12' />
                    <column datatype='string' name='text 7' ordinal='13' />
                    <column datatype='string' name='text 8' ordinal='14' />
                    <column datatype='string' name='text 9' ordinal='15' />
                    <column datatype='string' name='text 10' ordinal='16' />
                    <column datatype='string' name='text 11' ordinal='17' />
                    <column datatype='string' name='text 12' ordinal='18' />
                    <column datatype='string' name='text 13' ordinal='19' />
                    <column datatype='string' name='text 14' ordinal='20' />
                    <column datatype='string' name='text 15' ordinal='21' />
                    <column datatype='string' name='text 16' ordinal='22' />
                    <column datatype='string' name='text 17' ordinal='23' />
                    <column datatype='string' name='text 18' ordinal='24' />
                    <column datatype='string' name='text 19' ordinal='25' />
                    <column datatype='string' name='text 20' ordinal='26' />
                    <column datatype='string' name='text 21' ordinal='27' />
                    <column datatype='string' name='text 22' ordinal='28' />
                    <column datatype='string' name='text 23' ordinal='29' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression _.fcp.InequalityRelationships.false...op='=' _.fcp.InequalityRelationships.true...op='&lt;='>
              <expression _.fcp.InequalityRelationships.false...op='[date &lt;= Date]' _.fcp.InequalityRelationships.true...op='[date]' />
              <expression _.fcp.InequalityRelationships.false...op='[]' _.fcp.InequalityRelationships.true...op='[Date]' />
            </expression>
            <first-end-point guaranteed-value='true' object-id='data_124EE2141BA54C90BD438DFDBD8E24B8' />
            <second-end-point guaranteed-value='true' object-id='Sheet1_80B5288891E6463CA9D98797CD7CB6FF' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_9E60F125AE8D4665A7A35F337287C9BD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sentiment vs time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sentiment Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (processed_batch)' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dls6yh0eplwyy1epyiin1aky0rf'>
            <column datatype='real' name='[Sentiment rating]' role='measure' type='quantitative' />
            <column-instance column='[Sentiment rating]' derivation='Avg' name='[avg:Sentiment rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[star]' derivation='Avg' name='[avg:star:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;AU&quot;' value='&quot;Australia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Star' datatype='integer' name='[star]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' field-type='quantitative' fold='true' max='37645832.647181928' min='6917655.5932605918' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' field-type='quantitative' max='37645832.647181928' min='6917655.5932605918' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Latitude (generated)]' field-type='quantitative' max='12916640.288980998' min='-8713961.3965123929' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' max='1.0' min='-1.0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]' />
              <lod column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]' />
              <geometry column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' />
              <lod column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]' />
              <geometry column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Latitude (generated)]</rows>
        <cols>([federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)] + [federated.0dls6yh0eplwyy1epyiin1aky0rf].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{8331E26A-7401-48D0-8BDF-B7F88A471CF3}' />
    </worksheet>
    <worksheet name='Sentiment vs time'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (processed_batch)' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' />
          </datasources>
          <datasource-dependencies datasource='federated.0dls6yh0eplwyy1epyiin1aky0rf'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sentiment rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[Version]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment rating]' derivation='Avg' name='[avg:Sentiment rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[star]' derivation='Avg' name='[avg:star:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Version]' derivation='Count' name='[cnt:Version:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Version]' derivation='None' name='[none:Version:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Star' datatype='integer' name='[star]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (YEAR(Date1),QUARTER(Date1),MONTH(Date1),DAY(Date1))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_B30B95C697024FD5A2443CB4BE1B748C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[qr:Date:ok]' />
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[dy:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[twk:date:ok]' />
              <groupfilter function='member' level='[twk:date:ok]' member='#2022-04-03 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:ok]</column>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (YEAR(Date1),QUARTER(Date1),MONTH(Date1),DAY(Date1))]</column>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
          <_.fcp.AllowCalculationsForDensifiedMarks.true...calcs-on-densified-marks value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Version:qk]' scope='rows' value='Version History' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Version:qk]' field-type='quantitative' max='1' min='1' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' scope='rows' value='Sentiment rating' />
            <format attr='title' class='0' field='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]' scope='rows' value='Star Rating' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='91' />
                <format attr='maxheight' value='91' />
                <format attr='minwidth' value='619' />
                <format attr='maxwidth' value='619' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Version:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Version:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Version:qk] + ([federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk] + [federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]))</rows>
        <cols>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[twk:date:qk]</cols>
        <show-full-range>
          <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A8837FFB-4863-4C08-9798-7AEE2FE3872E}' />
    </worksheet>
    <worksheet name='Word Cloud'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (processed_batch)' name='federated.0dls6yh0eplwyy1epyiin1aky0rf' />
          </datasources>
          <datasource-dependencies datasource='federated.0dls6yh0eplwyy1epyiin1aky0rf'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Words' datatype='string' name='[Pivot Field Values]' role='dimension' type='nominal' />
            <column datatype='string' name='[Version]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Count' name='[cnt:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pivot Field Values]' derivation='None' name='[none:Pivot Field Values:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (Version,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9E60F125AE8D4665A7A35F337287C9BD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Version]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (WEEK(Date))]'>
            <groupfilter function='level-members' level='[twk:date:ok]' user:ui-action-filter='[Action1_9E60F125AE8D4665A7A35F337287C9BD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (YEAR(Date1),QUARTER(Date1),MONTH(Date1),DAY(Date1))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_B30B95C697024FD5A2443CB4BE1B748C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[qr:Date:ok]' />
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[dy:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pivot Field Values:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;!!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;&amp;&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;-&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;10&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1000&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;11&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;1‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;2&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;2‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;4&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;4!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;4‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;5&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;8&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;800&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Afterpay‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Afterpay‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Afterpayü•∞&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Amazon‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;BIG‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Bunnings‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;David‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I&apos;m&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I&apos;ve&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;It‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôll&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôm&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôm‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;I‚Äôve&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;OG‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Ok‚Ä¶sometimes&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;They&apos;re&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Youre&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;Y‚Äôall&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;a&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;about‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;affordable‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;all‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;am‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;an&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;and&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;and‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;anything‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;any‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;an‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;app‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;appüëåüèª‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;are&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;are‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;as‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;a‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;back‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;because‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;become‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;been‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;behalf‚Äôs!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;being‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;bestie‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;be‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;bigger‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;both‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;breeze‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;budget‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;build‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;but‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;buy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;can&apos;t‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;can‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;card‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;cash‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;credit‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;dates‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;deal‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;debit‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;delayed‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;desperate‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;doesn‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;don‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;don‚Äôt‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;early‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;easy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;enjoy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;everything‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;every‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;ever‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;exactly‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;except‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;expire‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;family‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;favorite‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;financially‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;for‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;free‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;from‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;further‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;get‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;gift‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;give‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;going‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;goods‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;great‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;handy‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;has‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;haven‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;have‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;helps‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;help‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;here‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;home‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;how‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;if&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;im&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;in&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;into&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;in‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;is&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;issues‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;issue‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;is‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!!!&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it!‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it&apos;s&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it&apos;s‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;item‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;its&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;ittt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;it‚Äôs‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;just‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;later‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;life‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;lot‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;love‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;makes‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;make‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;making‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;me‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;most‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;much‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;my‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;necessity‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;needed‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;need‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;never‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;new‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;not‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;now‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;no‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;n‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;of‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;one‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;on‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;ordering‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;order‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;other‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;paycheck‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;paying‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;payments‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;payment‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;pay‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;people‚Ä¶freedom&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;per‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;phone‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;pinch‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;prices‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;problem‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;process‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;product‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;purchase‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;purchasing‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;reseting‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;retailers‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;rewards‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;salary‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;see‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;service‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;shopping‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;shop‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;something‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;so‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;spending‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;stars‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;store‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;stuff‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;system‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;target‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;that‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;them&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;there&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;these&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;these‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;they&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;they‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the‚Ä¶convenience&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;the‚Ä¶to&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;things‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;thing‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;this‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;those‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;times‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;time‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;to&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;to‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;up‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;user‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;use‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;using‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;us‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;valued‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;very‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;want‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;want‚Ä¶when&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;wasn‚Äôt&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;was‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;well‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;what‚Äôs&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;when‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;without‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;with‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;with‚Ä¶budgeting&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;worries‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;would‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;you&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;your&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;your‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;you‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;you‚Äôre&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;‚ù§Ô∏è&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üåª&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üéÅ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëå‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëç&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëç‚ù§Ô∏èüëç‚ù§Ô∏èüëçüåπ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëçüèº&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüëçüèºüéäüéäüéäüëçüèºüëçüèºüëç‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëç‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üíØ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üíØüíØ&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØüíØ‚Ä¶&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üòäI&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üòé&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üôè&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Values:nk]' member='&quot;üôèüèªüíúüå∏üåø&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]</column>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (WEEK(Date))]</column>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (YEAR(Date1),QUARTER(Date1),MONTH(Date1),DAY(Date1))]</column>
            <column>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[Action (Version,WEEK(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]' />
              <size column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Pivot Field Values:qk]' />
              <text column='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9010CA8E-808F-4107-A771-0B7A36D66461}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='6' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='49000' id='3' name='Sentiment vs time' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='5' name='Sentiment Map' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='11' name='Word Cloud' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sentiment vs time' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Sentiment Map' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Word Cloud' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{376A5729-8740-4DD1-97B6-A8F6EAFA1A86}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sentiment vs time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Sentiment rating:ok]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Version:nk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:date:nk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:star:nk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FA895C8-C801-4E13-AD61-122687E340A8}' />
    </window>
    <window class='worksheet' name='Word Cloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:Pivot Field Values:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0CB056D-19FF-4ED0-8A6F-BEF5FBAD6433}' />
    </window>
    <window class='worksheet' maximized='true' name='Sentiment Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='46' type='filters' />
            <card size='294' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:Sentiment rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[avg:star:qk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[none:location:nk]</field>
            <field>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[sum:Sentiment rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9923F30-5A56-4B7B-B6B7-0FE4604CC0C0}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sentiment Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sentiment vs time'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0dls6yh0eplwyy1epyiin1aky0rf].[cnt:Version:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Word Cloud' />
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{8E66F978-E1CE-4F5B-A8D4-CB1971354E30}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sentiment Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sentiment vs time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Word Cloud' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy96Y+l2Z3n9TnnPOtdY4/IyMitqrKyXC4v5XLb7vZgT/dMj93qmW7UIxCo
      EeI1SAghIfGGFyD+AhCCF0hoJBA9wzDA0A0aqRvs8lZ22W6Xl9qyttwiMta7P+tZeHFu3IjI
      jFxqsbtFxldKZdx7n/vc85zn/H7nt3x/v0c45xxnOMMTCvk3PYAznOFvEmcCcIYnGmcCcIYn
      GmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYn
      GmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYn
      GmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYn
      GmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYnGmcCcIYn
      GmcCcIYnGsEneTI9ynDWgQCsQ8YhKo0/yZ84A1BqixSC2liEAOcgDSXOGhACgfAHCoEQ4vFO
      6hwUBSQJaA04CEJ43O//BmGdBUCKj6+/ZwLgnENb66dOCJQQ5HVNEobIx5yEephhqxpnLEJJ
      VBqj0hjr7Ccy2CcBzlqElDjnwBhsUSCjGKTwi1FKauMYVxptHEkoyWvLWmyoshFCSKyuQQii
      Zpuo0Xq8H7YWdrah1fKCYC202ugwweSlH1ttQICMI6KF9q9xFh6OndE2o3KIEhLjLL3sgC9d
      +u2PdC7hnHPgBeCHNz7AOUdtDd0kJa9rznU6XFpYxBoLziED9aF+YJD3+eDgPTpJl3E5Iq9z
      fuviVx5fM31COFxYvw6U2T4qiCnzA4QQRMkCKmwAIIRgOsWz1/fC9HrU29uoTgfT63kFEgS4
      6UIWCMxoiFpYJL727H3ncM7hnMUZg1QBzhocIKVEyA9xv8oSlPK7wXRr0ZWm2h0g0winDaqR
      gLFES93Zbx9dG8DR2A4/+0j32lp4wP2alGO0NVSmJFQh2miWWsuPOJ1FTs9nnZsp9RMCoK2l
      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
      tccfRQrB0N4DHDj5AOee/g5ep4XXaVGemGLswDEq89eZvvN+As/l+ukXcG4UmwAAIABJREFU
      2XfXB3jt8UcRUcTQ1EH23XU/Z5/6Nn63jdduMbT3AAfve5D6yiIj04fpNGqcefIbSCGYuvMU
      I9OHef3xRwkDH7/bYfqu+5FxxPyls0gpGNl3hMmjd7/9CLpNiUSIoRnvHfejaei6hWVn8bqr
      irr9fUxpeHV+lv3lQbKOQ9ZxKKZSnF9a4uSWnN3La2ssNuqEccy5pSX0HqS7lEpxdmmRuuti
      6vU+iDSfSHJqcgoNuLS6wm9/9zt88ugxHjpwkEtrq/wvX/1rfuunPsN4QeVxzKxX+cvXX+XI
      8Ai/873vcK1a4ejwiDIZNY1/+b3vcmBwkP3lQQ4PDbHcbPJb3/4Gv3b/h/jY4SN9Jfjnj38b
      Uzc4NjJCxnH4zsU3+dq5M/yfn/kclmEQxDH/7LFv8ke/8MvbYDVSSn73qe/zn5+8lwPl7YlV
      txJN0/qDf5vInrz5/BNy9s3XpRBCBp4rX/rmF2V9dUkKIeRzf/2nstOoyae++Iey22pIIYR8
      +ot/KOM4kk9+4fNSxLG88MKTcunqBXnmB9+SC5fOSq/Tlk9+4fMy8D351Bf/QLrtpozjWD79
      pT+SUkr5zJf/WAoRyxe++mdyfWledlsN+f0/+3+kEEI++ee/LwPPlb7blc9/9c/U+X/17+UP
      Uy7X35TdsPNDvcd7FSGE/N+/8VX5g6uX+22PnnlD/ovvPiaFENvOXW015a/86b+Xfhju+J5/
      8fhj8rEL53e0+2Eof+OLX5Avz85sa//G+bPy//jm12Tcu8erc7Pyf/irv5C/873vyP/v5Rel
      d9M9Pvv7/1bOrFe3PdOFlWX5i3/8h7LW2ezjputuOyeKY/lPvvxF+cy1q/33/d++/hX5pTde
      2/b9l1dX5T/6D38sgyjavaNuQ/orQKu6yvQd9ylNcRL4nRa5slqy8kMjuO0mumGQzPQY2gwD
      XTcYmtzP6uwV1uaucujUh7lx9hUi36e6OEu+PNy33RPpbB+otFXa9XXmL54GoDg8rljRnASW
      kyAK/M0lc8uGNJYxL60+TSB8hpNjjKUnudG6woniPbxWfYETxXt4YfUHCBkjEHxw6CF0Teel
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
